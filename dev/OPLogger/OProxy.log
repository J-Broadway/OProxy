<OProxy [DEBUG:Flush]> 
<OProxy [INFO:_clear]> Starting _clear operation
<OProxy [DEBUG:_clear]> Clearing root extensions: ['myFunc', 'inlineClass']
<OProxy [INFO:_remove]> Extension 'myFunc' and all nested extensions removed successfully
<OProxy [DEBUG:_clear]> Removed root extension 'myFunc'
<OProxy [INFO:_remove]> Extension 'inlineClass' and all nested extensions removed successfully
<OProxy [DEBUG:_clear]> Removed root extension 'inlineClass'
 Restoring OProxies to default empty state
 Clearing in-memory hierarchy with 0 containers
 Reloading empty hierarchy
<OProxy [INFO:_clear]> _clear operation completed
<OProxy [TEST:info]> 
Adding containe opr._add('items', tf.mvs) 

<OProxy [DEBUG:_add]> Processing 'items' in container 'root'
<OProxy [INFO:_add]> Creating new container 'items'
<OProxy [DEBUG:_add]> List of OPs provided, count: 3
 Validating OP 1/3: op1
 Validated OP: op1 (path: /project1/myProject/op1)
 Validating OP 2/3: op2
 Validated OP: op2 (path: /project1/myProject/op2)
 Validating OP 3/3: op3
 Validated OP: op3 (path: /project1/myProject/op3)
 Creating container with path 'items'
 Adding 3 OPs as leaves to container 'items'
 Creating leaf for OP 'op1' with path 'items.op1'
 Creating leaf for OP 'op2' with path 'items.op2'
 Creating leaf for OP 'op3' with path 'items.op3'
 Adding container 'items' to parent children dict
<OProxy [INFO:_add]> Successfully created container 'items' with 3 OPs
<OProxy [DEBUG:_update_storage]> Saving container hierarchy to storage
 Saved 1 top-level containers to storage
<OProxy [TEST:info]> 
Showing storage after _add()

<OProxy [INFO:_storage]> Storage branch for container 'root'
"root" : {
    "children": {
        "items": {
            "children": {},
            "ops": {
                "op1": {
                    "op": {
                        "name": "op1",
                        "type": "moviefileinTOP",
                        "path": "/project1/myProject/op1"
                    },
                    "extensions": {}
                },
                "op2": {
                    "op": {
                        "name": "op2",
                        "type": "moviefileinTOP",
                        "path": "/project1/myProject/op2"
                    },
                    "extensions": {}
                },
                "op3": {
                    "op": {
                        "name": "op3",
                        "type": "moviefileinTOP",
                        "path": "/project1/myProject/op3"
                    },
                    "extensions": {}
                }
            },
            "extensions": {}
        }
    },
    "extensions": {}
}
<OProxy [TEST:info]> 
Now going to monkey patch the "items" container

 
verifying that MonkeyPatch path is correct

<OProxy [INFO]> hello world
<OProxy [TEST:info]> 
 now running opr._extend('items', cls='ResolutionMP', dat='extensions_for_tests', monkey_patch=True)

<OProxy [INFO:_extend]> Monkey-patched 'items' with 'ResolutionMP'
<OProxy [TEST:info]> 
showing storage after _extend()

<OProxy [INFO:_storage]> Storage branch for container 'root'
"root" : {
    "children": {
        "items": {
            "children": {},
            "ops": {
                "op1": {
                    "op": {
                        "name": "op1",
                        "type": "moviefileinTOP",
                        "path": "/project1/myProject/op1"
                    },
                    "extensions": {}
                },
                "op2": {
                    "op": {
                        "name": "op2",
                        "type": "moviefileinTOP",
                        "path": "/project1/myProject/op2"
                    },
                    "extensions": {}
                },
                "op3": {
                    "op": {
                        "name": "op3",
                        "type": "moviefileinTOP",
                        "path": "/project1/myProject/op3"
                    },
                    "extensions": {}
                }
            },
            "extensions": {},
            "monkey_patch": {
                "cls": "ResolutionMP",
                "dat": "/project1/myProject/extensions_for_tests"
            }
        }
    },
    "extensions": {}
}
<OProxy [TEST:info]> 
Now going to call the monkey patched container

<OProxy [INFO]> (1280, 720)
 (1000, 1000)
